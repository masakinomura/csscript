//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.5
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from CSScript.g4 by ANTLR 4.5

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591

#pragma warning disable 3021
using System;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.5")]
[System.CLSCompliant(false)]
public partial class CSScriptLexer : Lexer {
	public const int
		T__0=1, T__1=2, T__2=3, MUL=4, VAR=5, LINEEND=6, NAME=7, INT=8, LONG=9, 
		WHITESPACE=10, NEWLINE=11;
	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"T__0", "T__1", "T__2", "LOWERCASE", "UPPERCASE", "WORD", "MUL", "VAR", 
		"LINEEND", "NAME", "INT", "LONG", "WHITESPACE", "NEWLINE"
	};


	public CSScriptLexer(ICharStream input)
		: base(input)
	{
		Interpreter = new LexerATNSimulator(this,_ATN);
	}

	private static readonly string[] _LiteralNames = {
		null, "','", "'('", "')'", "'*'", null, "';'"
	};
	private static readonly string[] _SymbolicNames = {
		null, null, null, null, "MUL", "VAR", "LINEEND", "NAME", "INT", "LONG", 
		"WHITESPACE", "NEWLINE"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "CSScript.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return _serializedATN; } }

	public static readonly string _serializedATN =
		"\x3\x430\xD6D1\x8206\xAD2D\x4417\xAEF1\x8D80\xAADD\x2\rW\b\x1\x4\x2\t"+
		"\x2\x4\x3\t\x3\x4\x4\t\x4\x4\x5\t\x5\x4\x6\t\x6\x4\a\t\a\x4\b\t\b\x4\t"+
		"\t\t\x4\n\t\n\x4\v\t\v\x4\f\t\f\x4\r\t\r\x4\xE\t\xE\x4\xF\t\xF\x3\x2\x3"+
		"\x2\x3\x3\x3\x3\x3\x4\x3\x4\x3\x5\x3\x5\x3\x6\x3\x6\x3\a\x3\a\x3\a\x6"+
		"\a-\n\a\r\a\xE\a.\x3\b\x3\b\x3\t\x3\t\x3\t\x3\t\x3\n\x3\n\x3\v\x3\v\a"+
		"\v;\n\v\f\v\xE\v>\v\v\x3\f\x6\f\x41\n\f\r\f\xE\f\x42\x3\r\x3\r\x3\r\x3"+
		"\xE\x6\xEI\n\xE\r\xE\xE\xEJ\x3\xE\x3\xE\x3\xF\x5\xFP\n\xF\x3\xF\x3\xF"+
		"\x6\xFT\n\xF\r\xF\xE\xFU\x2\x2\x10\x3\x3\x5\x4\a\x5\t\x2\v\x2\r\x2\xF"+
		"\x6\x11\a\x13\b\x15\t\x17\n\x19\v\x1B\f\x1D\r\x3\x2\x6\x3\x2\x63|\x3\x2"+
		"\x43\\\x3\x2\x32;\x4\x2\v\v\"\"\\\x2\x3\x3\x2\x2\x2\x2\x5\x3\x2\x2\x2"+
		"\x2\a\x3\x2\x2\x2\x2\xF\x3\x2\x2\x2\x2\x11\x3\x2\x2\x2\x2\x13\x3\x2\x2"+
		"\x2\x2\x15\x3\x2\x2\x2\x2\x17\x3\x2\x2\x2\x2\x19\x3\x2\x2\x2\x2\x1B\x3"+
		"\x2\x2\x2\x2\x1D\x3\x2\x2\x2\x3\x1F\x3\x2\x2\x2\x5!\x3\x2\x2\x2\a#\x3"+
		"\x2\x2\x2\t%\x3\x2\x2\x2\v\'\x3\x2\x2\x2\r,\x3\x2\x2\x2\xF\x30\x3\x2\x2"+
		"\x2\x11\x32\x3\x2\x2\x2\x13\x36\x3\x2\x2\x2\x15\x38\x3\x2\x2\x2\x17@\x3"+
		"\x2\x2\x2\x19\x44\x3\x2\x2\x2\x1BH\x3\x2\x2\x2\x1DS\x3\x2\x2\x2\x1F \a"+
		".\x2\x2 \x4\x3\x2\x2\x2!\"\a*\x2\x2\"\x6\x3\x2\x2\x2#$\a+\x2\x2$\b\x3"+
		"\x2\x2\x2%&\t\x2\x2\x2&\n\x3\x2\x2\x2\'(\t\x3\x2\x2(\f\x3\x2\x2\x2)-\x5"+
		"\t\x5\x2*-\x5\v\x6\x2+-\a\x61\x2\x2,)\x3\x2\x2\x2,*\x3\x2\x2\x2,+\x3\x2"+
		"\x2\x2-.\x3\x2\x2\x2.,\x3\x2\x2\x2./\x3\x2\x2\x2/\xE\x3\x2\x2\x2\x30\x31"+
		"\a,\x2\x2\x31\x10\x3\x2\x2\x2\x32\x33\ax\x2\x2\x33\x34\a\x63\x2\x2\x34"+
		"\x35\at\x2\x2\x35\x12\x3\x2\x2\x2\x36\x37\a=\x2\x2\x37\x14\x3\x2\x2\x2"+
		"\x38<\x5\r\a\x2\x39;\t\x4\x2\x2:\x39\x3\x2\x2\x2;>\x3\x2\x2\x2<:\x3\x2"+
		"\x2\x2<=\x3\x2\x2\x2=\x16\x3\x2\x2\x2><\x3\x2\x2\x2?\x41\t\x4\x2\x2@?"+
		"\x3\x2\x2\x2\x41\x42\x3\x2\x2\x2\x42@\x3\x2\x2\x2\x42\x43\x3\x2\x2\x2"+
		"\x43\x18\x3\x2\x2\x2\x44\x45\x5\x17\f\x2\x45\x46\aN\x2\x2\x46\x1A\x3\x2"+
		"\x2\x2GI\t\x5\x2\x2HG\x3\x2\x2\x2IJ\x3\x2\x2\x2JH\x3\x2\x2\x2JK\x3\x2"+
		"\x2\x2KL\x3\x2\x2\x2LM\b\xE\x2\x2M\x1C\x3\x2\x2\x2NP\a\xF\x2\x2ON\x3\x2"+
		"\x2\x2OP\x3\x2\x2\x2PQ\x3\x2\x2\x2QT\a\f\x2\x2RT\a\xF\x2\x2SO\x3\x2\x2"+
		"\x2SR\x3\x2\x2\x2TU\x3\x2\x2\x2US\x3\x2\x2\x2UV\x3\x2\x2\x2V\x1E\x3\x2"+
		"\x2\x2\v\x2,.<\x42JOSU\x3\b\x2\x2";
	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN.ToCharArray());
}
