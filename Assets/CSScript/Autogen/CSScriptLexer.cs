//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.5
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from CSScript.g4 by ANTLR 4.5

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591

#pragma warning disable 3021
using System;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.5")]
[System.CLSCompliant(false)]
public partial class CSScriptLexer : Lexer {
	public const int
		OP_MUL=1, VAR=2, NEW=3, OP_ASSIGN=4, LESS_THAN=5, GREATER_THAN=6, PARENTHESIS_START=7, 
		PARENTHESIS_END=8, COMMA=9, NAME=10, INT=11, LONG=12, WHITESPACE=13, EOL=14;
	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"LOWERCASE", "UPPERCASE", "WORD", "OP_MUL", "VAR", "NEW", "OP_ASSIGN", 
		"LESS_THAN", "GREATER_THAN", "PARENTHESIS_START", "PARENTHESIS_END", "COMMA", 
		"NAME", "INT", "LONG", "WHITESPACE", "EOL"
	};


	public CSScriptLexer(ICharStream input)
		: base(input)
	{
		Interpreter = new LexerATNSimulator(this,_ATN);
	}

	private static readonly string[] _LiteralNames = {
		null, "'*'", null, null, "'='", "'<'", "'>'", "'('", "')'", "','"
	};
	private static readonly string[] _SymbolicNames = {
		null, "OP_MUL", "VAR", "NEW", "OP_ASSIGN", "LESS_THAN", "GREATER_THAN", 
		"PARENTHESIS_START", "PARENTHESIS_END", "COMMA", "NAME", "INT", "LONG", 
		"WHITESPACE", "EOL"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "CSScript.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return _serializedATN; } }

	public static readonly string _serializedATN =
		"\x3\x430\xD6D1\x8206\xAD2D\x4417\xAEF1\x8D80\xAADD\x2\x10g\b\x1\x4\x2"+
		"\t\x2\x4\x3\t\x3\x4\x4\t\x4\x4\x5\t\x5\x4\x6\t\x6\x4\a\t\a\x4\b\t\b\x4"+
		"\t\t\t\x4\n\t\n\x4\v\t\v\x4\f\t\f\x4\r\t\r\x4\xE\t\xE\x4\xF\t\xF\x4\x10"+
		"\t\x10\x4\x11\t\x11\x4\x12\t\x12\x3\x2\x3\x2\x3\x3\x3\x3\x3\x4\x3\x4\x3"+
		"\x4\x6\x4-\n\x4\r\x4\xE\x4.\x3\x5\x3\x5\x3\x6\x3\x6\x3\x6\x3\x6\x3\a\x3"+
		"\a\x3\a\x3\a\x3\b\x3\b\x3\t\x3\t\x3\n\x3\n\x3\v\x3\v\x3\f\x3\f\x3\r\x3"+
		"\r\x3\xE\x3\xE\a\xEI\n\xE\f\xE\xE\xEL\v\xE\x3\xF\x6\xFO\n\xF\r\xF\xE\xF"+
		"P\x3\x10\x3\x10\x3\x10\x3\x11\x6\x11W\n\x11\r\x11\xE\x11X\x3\x11\x3\x11"+
		"\x3\x12\x3\x12\x5\x12_\n\x12\x3\x12\x3\x12\a\x12\x63\n\x12\f\x12\xE\x12"+
		"\x66\v\x12\x2\x2\x13\x3\x2\x5\x2\a\x2\t\x3\v\x4\r\x5\xF\x6\x11\a\x13\b"+
		"\x15\t\x17\n\x19\v\x1B\f\x1D\r\x1F\xE!\xF#\x10\x3\x2\x6\x3\x2\x63|\x3"+
		"\x2\x43\\\x3\x2\x32;\x4\x2\v\v\"\"l\x2\t\x3\x2\x2\x2\x2\v\x3\x2\x2\x2"+
		"\x2\r\x3\x2\x2\x2\x2\xF\x3\x2\x2\x2\x2\x11\x3\x2\x2\x2\x2\x13\x3\x2\x2"+
		"\x2\x2\x15\x3\x2\x2\x2\x2\x17\x3\x2\x2\x2\x2\x19\x3\x2\x2\x2\x2\x1B\x3"+
		"\x2\x2\x2\x2\x1D\x3\x2\x2\x2\x2\x1F\x3\x2\x2\x2\x2!\x3\x2\x2\x2\x2#\x3"+
		"\x2\x2\x2\x3%\x3\x2\x2\x2\x5\'\x3\x2\x2\x2\a,\x3\x2\x2\x2\t\x30\x3\x2"+
		"\x2\x2\v\x32\x3\x2\x2\x2\r\x36\x3\x2\x2\x2\xF:\x3\x2\x2\x2\x11<\x3\x2"+
		"\x2\x2\x13>\x3\x2\x2\x2\x15@\x3\x2\x2\x2\x17\x42\x3\x2\x2\x2\x19\x44\x3"+
		"\x2\x2\x2\x1B\x46\x3\x2\x2\x2\x1DN\x3\x2\x2\x2\x1FR\x3\x2\x2\x2!V\x3\x2"+
		"\x2\x2#\\\x3\x2\x2\x2%&\t\x2\x2\x2&\x4\x3\x2\x2\x2\'(\t\x3\x2\x2(\x6\x3"+
		"\x2\x2\x2)-\x5\x3\x2\x2*-\x5\x5\x3\x2+-\a\x61\x2\x2,)\x3\x2\x2\x2,*\x3"+
		"\x2\x2\x2,+\x3\x2\x2\x2-.\x3\x2\x2\x2.,\x3\x2\x2\x2./\x3\x2\x2\x2/\b\x3"+
		"\x2\x2\x2\x30\x31\a,\x2\x2\x31\n\x3\x2\x2\x2\x32\x33\ax\x2\x2\x33\x34"+
		"\a\x63\x2\x2\x34\x35\at\x2\x2\x35\f\x3\x2\x2\x2\x36\x37\ap\x2\x2\x37\x38"+
		"\ag\x2\x2\x38\x39\ay\x2\x2\x39\xE\x3\x2\x2\x2:;\a?\x2\x2;\x10\x3\x2\x2"+
		"\x2<=\a>\x2\x2=\x12\x3\x2\x2\x2>?\a@\x2\x2?\x14\x3\x2\x2\x2@\x41\a*\x2"+
		"\x2\x41\x16\x3\x2\x2\x2\x42\x43\a+\x2\x2\x43\x18\x3\x2\x2\x2\x44\x45\a"+
		".\x2\x2\x45\x1A\x3\x2\x2\x2\x46J\x5\a\x4\x2GI\t\x4\x2\x2HG\x3\x2\x2\x2"+
		"IL\x3\x2\x2\x2JH\x3\x2\x2\x2JK\x3\x2\x2\x2K\x1C\x3\x2\x2\x2LJ\x3\x2\x2"+
		"\x2MO\t\x4\x2\x2NM\x3\x2\x2\x2OP\x3\x2\x2\x2PN\x3\x2\x2\x2PQ\x3\x2\x2"+
		"\x2Q\x1E\x3\x2\x2\x2RS\x5\x1D\xF\x2ST\aN\x2\x2T \x3\x2\x2\x2UW\t\x5\x2"+
		"\x2VU\x3\x2\x2\x2WX\x3\x2\x2\x2XV\x3\x2\x2\x2XY\x3\x2\x2\x2YZ\x3\x2\x2"+
		"\x2Z[\b\x11\x2\x2[\"\x3\x2\x2\x2\\\x64\a=\x2\x2]_\a\xF\x2\x2^]\x3\x2\x2"+
		"\x2^_\x3\x2\x2\x2_`\x3\x2\x2\x2`\x63\a\f\x2\x2\x61\x63\a\xF\x2\x2\x62"+
		"^\x3\x2\x2\x2\x62\x61\x3\x2\x2\x2\x63\x66\x3\x2\x2\x2\x64\x62\x3\x2\x2"+
		"\x2\x64\x65\x3\x2\x2\x2\x65$\x3\x2\x2\x2\x66\x64\x3\x2\x2\x2\v\x2,.JP"+
		"X^\x62\x64\x3\b\x2\x2";
	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN.ToCharArray());
}
